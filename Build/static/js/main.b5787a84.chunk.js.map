{"version":3,"sources":["web3gl/index.js","App.js","reportWebVitals.js","index.js"],"names":["web3","onboard","Onboard","dappId","networkId","window","web3Network","subscriptions","wallet","Web3","provider","console","log","name","walletSelect","wallets","walletName","preferred","infuraKey","a","walletCheck","signMessage","web3gl","loginMessage","eth","getAccounts","from","expiration","Math","round","Date","now","toString","message","personal","sign","signature","method","abi","contract","args","Contract","JSON","parse","methods","call","response","callResponse","value","send","login","callContract","sendContract","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4eAGIA,E,wGAGEC,EAAUC,YAAQ,CACtBC,OAAQ,uCACRC,UAAWC,OAAOC,YAClBC,cAAe,CACbC,OAAQ,SAACA,GACPR,EAAO,IAAIS,IAAKD,EAAOE,UACvBC,QAAQC,IAAR,UAAeJ,EAAOK,KAAtB,wBAGJC,aAAc,CACZC,QAAS,CACP,CAAEC,WAAY,WAAYC,WAAW,GACrC,CACED,WAAY,gBACZE,UAAW,mCACXD,WAAW,GAEb,CAAED,WAAY,QAASC,WAAW,O,4CAQxC,sBAAAE,EAAA,+EAEUlB,EAAQa,eAFlB,uBAGUb,EAAQmB,cAHlB,uBAKuCC,IALvC,OAKIhB,OAAOiB,OAAOC,aALlB,OAMIZ,QAAQC,IAAIP,OAAOiB,OAAOC,cAN9B,kDAQIZ,QAAQC,IAAR,MARJ,2D,+BAeeS,I,2EAAf,kCAAAF,EAAA,sEACsBnB,EAAKwB,IAAIC,cAD/B,cACQC,EADR,OAC8C,GACtCC,EAAaC,KAAKC,MAAMC,KAAKC,MAAQ,IAAO,KAAKC,WACjDC,EAHR,UAGqBP,EAHrB,YAG6BC,GAH7B,SAI0B3B,EAAKwB,IAAIU,SAASC,KAAKF,EAASP,GAJ1D,cAIQU,EAJR,mCAKYA,EALZ,YAKyBH,IALzB,4C,kEAgBA,WAA4BI,EAAQC,EAAKC,EAAUC,GAAnD,iBAAArB,EAAA,uEACyB,MAAInB,EAAKwB,IAAIiB,SAClCC,KAAKC,MAAML,GACXC,GACAK,SAAQP,GAHa,oBAGFK,KAAKC,MAAMH,KAAOK,OAJzC,OACQC,EADR,OAKEnC,QAAQC,IAAIkC,GACZzC,OAAOiB,OAAOyB,aAAeD,EAASd,WANxC,4C,kEAkBA,WAA4BK,EAAQC,EAAKC,EAAUC,EAAMQ,GAAzD,mBAAA7B,EAAA,6DACER,QAAQC,IAAI,CAAEyB,SAAQC,MAAKC,WAAUC,OAAMQ,UAD7C,SAEsBhD,EAAKwB,IAAIC,cAF/B,cAEQC,EAFR,OAE8C,GAF9C,UAGyB,MAAI1B,EAAKwB,IAAIiB,SAClCC,KAAKC,MAAML,GACXC,GACAK,SAAQP,GAHa,oBAGFK,KAAKC,MAAMH,KAAOS,KAAK,CAAEvB,OAAMsB,UANtD,OAGQF,EAHR,OAOEnC,QAAQC,IAAIkC,GAPd,4C,sBAUAzC,OAAOiB,OAAS,CACd4B,M,2CACA3B,aAAc,GACd4B,a,kDACAJ,aAAc,GACdK,a,iECzFaC,MAJf,WACE,OAAO,yBCSMC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,gCAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.b5787a84.chunk.js","sourcesContent":["import Onboard from \"bnc-onboard\";\nimport Web3 from \"web3\";\n\nlet web3;\n\n// https://docs.blocknative.com/onboard\nconst onboard = Onboard({\n  dappId: \"abfa7356-64c3-4047-a6e1-cdb39a0c691e\",\n  networkId: window.web3Network, // from\n  subscriptions: {\n    wallet: (wallet) => {\n      web3 = new Web3(wallet.provider);\n      console.log(`${wallet.name} is now connected`);\n    },\n  },\n  walletSelect: {\n    wallets: [\n      { walletName: \"metamask\", preferred: true },\n      {\n        walletName: \"walletConnect\",\n        infuraKey: \"6429a308b4d646399b1ea170bb406c61\",\n        preferred: true,\n      },\n      { walletName: \"torus\", preferred: true },\n    ],\n  },\n});\n\n/*\ncall window.web3gl.login() to display onboardjs modal\n*/\nasync function login() {\n  try {\n    await onboard.walletSelect();\n    await onboard.walletCheck();\n    // save login message for unity to access\n    window.web3gl.loginMessage = await signMessage();\n    console.log(window.web3gl.loginMessage);\n  } catch (error) {\n    console.log(error);\n  }\n}\n\n/*\nsign message to verify user address.\n*/\nasync function signMessage() {\n  const from = (await web3.eth.getAccounts())[0];\n  const expiration = Math.round(Date.now() / 1000 + 300).toString();\n  const message = `${from}-${expiration}`;\n  const signature = await web3.eth.personal.sign(message, from);\n  return `${signature}-${message}`;\n}\n\n/* \ncalls any contract method\nconst method = \"balanceOf\"\nconst abi = [ { inputs: [ { internalType: \"address\", name: \"account\", type: \"address\" }, { internalType: \"uint256\", name: \"id\", type: \"uint256\" }, ], name: \"balanceOf\", outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }], stateMutability: \"view\", type: \"function\", }, ];\nconst contract = \"0x2ebecabbbe8a8c629b99ab23ed154d74cd5d4342\"\nconst args = [\"0x72b8Df71072E38E8548F9565A322B04b9C752932\", 17]\nwindow.web3gl.callContract(abi, contract, args)\n*/\nasync function callContract(method, abi, contract, args) {\n  const response = await new web3.eth.Contract(\n    JSON.parse(abi),\n    contract\n  ).methods[method](...JSON.parse(args)).call();\n  console.log(response);\n  window.web3gl.callResponse = response.toString();\n}\n\n/* \nsend eth and call any contract\nconst method = \"increment\"\nconst abi = [ { \"inputs\": [], \"name\": \"increment\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"x\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" } ]\nconst contract = \"0xB6B8bB1e16A6F73f7078108538979336B9B7341C\"\nconst args = []\nconst value = \"0\"\nwindow.web3gl.callContract(abi, contract, args)\n*/\nasync function sendContract(method, abi, contract, args, value) {\n  console.log({ method, abi, contract, args, value });\n  const from = (await web3.eth.getAccounts())[0];\n  const response = await new web3.eth.Contract(\n    JSON.parse(abi),\n    contract\n  ).methods[method](...JSON.parse(args)).send({ from, value });\n  console.log(response);\n}\n\nwindow.web3gl = {\n  login,\n  loginMessage: \"\",\n  callContract,\n  callResponse: \"\",\n  sendContract,\n};\n","import \"./web3gl\"\n\nfunction App() {\n  return <div></div>;\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}